server.port = 8080
spring.aop.proxy-target-class=true


# DataSource settings: set here your own configurations for the database
# connection. In this example we have "recursos_humanos" as database name and
# "root" as username and password.

# spring.datasource.url=jdbc:mysql://localhost:3306/sys
# spring.datasource.username=root
# spring.datasource.password= sql_b@se343!!

#DESCOMENTAR SI USAS HEROKU
 spring.datasource.url=jdbc:mysql://i943okdfa47xqzpy.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/widf7xizy9w1rd6x?useSSL=false
 spring.datasource.username=ihmc274pohr7pm8o
 spring.datasource.password=pij7r8tsgp2p0xrz

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true


#to show sql
spring.jpa.properties.hibernate.show_sql=true
#formatting
spring.jpa.properties.hibernate.format_sql=true
#printing parameter values in order
logging.level.org.hibernate.type.descriptor.sql=trace


# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Enable all endpoints
management.endpoints.web.exposure.include=*

#Spring serializer
spring.jackson.serialization.fail-on-empty-beans=false

#GoogleCalendar
google.client.client-id=67224328580-8oei1stptmdu5822ldq98in91kbd00i1.apps.googleusercontent.com
google.client.client-secret=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
google.client.access-token-uri=https://www.googleapis.com/oauth2/v3/token
google.client.user-authorization-uri=https://accounts.google.com/o/oauth2/auth?access_type=offline&prompt=consent
google.client.client-authentication-scheme=query
google.client.scope=profile,email,https://www.googleapis.com/auth/calendar,https://www.googleapis.com/auth/user.gender.read,https://www.googleapis.com/auth/user.birthday.read
google.resource.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
google.resource.prefer-token-info=true
google.client.redirectUri=http://localhost:8080/api/login/google

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=healthsafe2023@gmail.com
spring.mail.password=ycoxuromvozltszq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.web.cors.allow-origin = https://www.healthandsafe.com.ar/

springdoc.swagger-ui.operationsSorter=method
